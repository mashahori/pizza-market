{"version":3,"sources":["components/Header/Header.module.css","components/CartList/CartList.module.css","components/CartItem/CartItem.module.css","components/MenuCard/MenuCard.module.css","components/Popup/Popup.module.css","components/Menu/Menu.module.css","components/Cart/Cart.module.css","modules/actions.js","components/MenuCard/MenuCard.js","components/Header/Header.js","components/Menu/Menu.js","components/Popup/Popup.js","components/CartItem/CartItem.js","components/CartList/CartList.js","components/Cart/Cart.js","App.js","serviceWorker.js","modules/reducers.js","utils.js","modules/sagas.js","store.js","index.js"],"names":["module","exports","addToCartAction","createAction","submitOrderAction","emptyCartAction","decreaseCountAction","increaseCountAction","deleteItemtAction","MenuCard","props","addToCart","data","id","name","description","price","className","style","card","picture","src","alt","wrapper","button","type","onClick","e","target","defaultProps","routes","connect","dispatch","Header","link","count","useSelector","state","totalQuantity","header","menu","link_menu","to","Menu","pizzasList","items","title","pizzas","map","item","key","Popup","useDispatch","overlay","popup","CartItem","quantity","toggle","payload","disabled","CartList","useState","ordered","setOrdered","addedItems","total","delivery","container","list","el","index","payment","payment__item","orderedItems","Cart","cart","length","empty","App","path","component","Boolean","window","location","hostname","match","initState","rootReducer","action","toString","addedItem","find","repitedItem","newTotal","indexOf","restItems","slice","handleOrder","emptyCart","setLocalStorage","getState","localStorage","setItem","JSON","stringify","takeEvery","select","call","clearLocalStorage","removeItem","sagaMiddleWare","createSagaMiddleWare","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","noop","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80b1a2ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__MQ48O\",\"menu\":\"Header_menu__36G-A\",\"link\":\"Header_link__27Gpd\",\"link_menu\":\"Header_link_menu__3bTJ2\",\"logo\":\"Header_logo__pjrpW\",\"count\":\"Header_count__29lLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"CartList_cart__1zwVH\",\"item\":\"CartList_item__Ie4Y6\",\"title\":\"CartList_title__24spC\",\"container\":\"CartList_container__12lI-\",\"list\":\"CartList_list__2Jwvb\",\"payment\":\"CartList_payment__2hbGK\",\"payment__item\":\"CartList_payment__item__24D9B\",\"button\":\"CartList_button__3AzUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CartItem_card__3ivx8\",\"picture\":\"CartItem_picture__1Kzxe\",\"name\":\"CartItem_name__3XNCV\",\"description\":\"CartItem_description__11Obd\",\"wrapper\":\"CartItem_wrapper__2zjL-\",\"price\":\"CartItem_price__eYgdV\",\"button\":\"CartItem_button__2hAkc\",\"toggle\":\"CartItem_toggle__3ZO-b\",\"quantity\":\"CartItem_quantity__17cpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MenuCard_card__ns5Tz\",\"picture\":\"MenuCard_picture__2exc0\",\"name\":\"MenuCard_name__1hjtk\",\"description\":\"MenuCard_description__InIxt\",\"wrapper\":\"MenuCard_wrapper__2GMab\",\"price\":\"MenuCard_price__1i5AF\",\"button\":\"MenuCard_button__tax0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Popup_overlay__2r-hP\",\"popup\":\"Popup_popup__1R3l6\",\"title\":\"Popup_title__2KQLm\",\"button\":\"Popup_button__3ovti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3U4WL\",\"pizzas\":\"Menu_pizzas__gVGWv\",\"title\":\"Menu_title__25r2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1uGM-\",\"title\":\"Cart_title__2X6EF\",\"empty\":\"Cart_empty__IclwF\"};","import { createAction } from 'redux-actions';\r\n\r\nexport const addToCartAction = createAction('ADD_TO_CART');\r\nexport const submitOrderAction = createAction('SUBMIT_ORDER');\r\nexport const emptyCartAction = createAction('EMPTY_CART');\r\nexport const decreaseCountAction = createAction('DECREASE');\r\nexport const increaseCountAction = createAction('INCREASE');\r\nexport const deleteItemtAction = createAction('DELETE');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport style from './MenuCard.module.css';\r\nimport { addToCartAction } from '../../modules/actions';\r\n\r\nconst MenuCard = (props) => {\r\n  const { addToCart, data: { id, name, description, price } } = props;\r\n\r\n  const addPizza = (e) => {\r\n    addToCart(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <div className={style.card}>\r\n      <img className={style.picture} src={`img/pizza${id}.png`} alt=\"pizza\" />\r\n      <h2 className={style.name}>{name}</h2>\r\n      <p className={style.description}>{description}</p>\r\n      <div className={style.wrapper}>\r\n        <span className={style.price}>{`${price}$`}</span>\r\n        <button className={style.button} type=\"button\" id={id} onClick={addPizza}>Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMenuCard.propTypes = {\r\n  routes: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nMenuCard.defaultProps = {\r\n  routes: [],\r\n};\r\n\r\nconst mapDispathToProps = (dispatch) => ({\r\n  addToCart: (id) => dispatch(addToCartAction(id)),\r\n});\r\n\r\nexport default connect(null, mapDispathToProps)(MenuCard);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Header = ({ link }) => {\r\n  const count = useSelector(state => state.totalQuantity)\r\n  return (\r\n    <div className={style.header}>\r\n      { link === 'cart' ? (\r\n        <div className={style.menu}>\r\n          <div className={style.link_menu}>\r\n            Menu\r\n          </div>\r\n          <Link className={style.link} to={`/${link}`}>\r\n            <img src=\"img/cart.png\" alt=\"Cart\" />\r\n            <span className={style.count}>{count}</span>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className={style.menu}>\r\n          <Link className={style.link_menu} to={`/${link}`}>\r\n            Menu\r\n          </Link>\r\n          <div className={style.link}>\r\n            <img src=\"img/cart.png\" alt=\"Cart\" />\r\n            <span className={style.count}>{count}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  link: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport MenuCard from '../MenuCard';\r\nimport Header from '../Header';\r\nimport style from './Menu.module.css';\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Menu = () => {\r\n  const pizzasList = useSelector(state => state.items);\r\n  return (\r\n    <>\r\n      <Header link=\"cart\" />\r\n      <div className={style.menu}>\r\n        <h1 className={style.title}>Pizza</h1>\r\n        <ul className={style.pizzas}>\r\n          {pizzasList.map(item => <li key={item.name}><MenuCard data={item} /></li>)}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport style from './Popup.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Popup = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div className={style.overlay}>\r\n      </div>\r\n      <div className={style.popup}>\r\n        <h1 className={style.title}>Success!</h1>\r\n        <Link to=\"/menu\">\r\n          <button className={style.button} type=\"button\" onClick={() => dispatch({ type: 'EMPTY_CART' })}>Menu</button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n)};\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport style from './CartItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CartItem = (props) => {\r\n  const { item: { id, name, quantity, price } } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={style.card}>\r\n      <img className={style.picture} src={`img/pizza${id}.png`} alt=\"pizza\" />\r\n      <h2 className={style.name}>{name}</h2>\r\n      <div className={style.wrapper}>\r\n        <span className={style.price}>{`${price}$`}</span>\r\n        <button\r\n          className={style.toggle}\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={() => dispatch({ type: 'DECREASE', payload: id })}\r\n          disabled={quantity === 1}\r\n        >\r\n         -\r\n        </button>\r\n        <span className={style.quantity}>{quantity}</span>\r\n        <button className={style.toggle} type=\"button\" id={id} onClick={() => dispatch({ type: 'INCREASE', payload: id })}>\r\n         +\r\n        </button>\r\n      </div>\r\n      <button className={style.button} type=\"button\" id={id} onClick={() => dispatch({ type: 'DELETE', payload: id })}>\r\n        <img src=\"img/can.png\" alt=\"Delete\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './CartList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Popup from '../Popup';\r\nimport CartItem from '../CartItem';\r\n\r\nconst CartList = (props) => {\r\n  const [ ordered, setOrdered ] = useState(false);\r\n\r\n  const addedItems = useSelector(state => state.addedItems);\r\n  const total = useSelector(state => state.total)\r\n  const delivery = useSelector(state => state.delivery)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (orderedItems) => {\r\n    setOrdered(true);\r\n    dispatch({ type: 'SUBMIT_ORDER', payload: orderedItems });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.container} >\r\n        <ul className={style.list}>\r\n          {addedItems.map((el, index) => (\r\n            <li className={style.item} key={index}>\r\n              <CartItem item={el} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul className={style.payment}>\r\n          <li className={style.payment__item}><span>Subtotal:</span><span>{`${total}$`}</span></li>\r\n          <li className={style.payment__item}><span>Delivery</span><span>{`${delivery}$`}</span></li>\r\n          <li className={style.payment__item}><span>Total</span><span>{`${total + delivery}$`}</span></li>\r\n          <li className={style.payment__item}>\r\n            <button className={style.button} type=\"button\" onClick={(addedItems) =>handleSubmit(addedItems)}>\r\n              Submit order\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {ordered && <Popup />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../Header';\r\nimport style from './Cart.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport CartList from '../CartList';\r\n\r\nconst Cart = (props) => {\r\n  const addedItems = useSelector(state => state.addedItems);\r\n\r\n  return (\r\n    <>\r\n      <Header link=\"menu\" />\r\n      <div className={style.cart}>\r\n        <h1 className={style.title}>Cart</h1>\r\n        {addedItems.length ? (\r\n          <CartList />\r\n          ) : (\r\n            <div>\r\n              <span className={style.empty}>No pizza here...</span>\r\n            </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\nimport Menu from './components/Menu';\nimport Cart from './components/Cart';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { pizzas } from './utils';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/menu\" component={() => <Menu />} />\n        <Route path=\"/cart\" component={Cart} />\n        <Redirect to=\"/menu\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { addToCartAction, emptyCartAction, decreaseCountAction, increaseCountAction,\r\ndeleteItemtAction } from './actions';\r\nimport { pizzas } from '../utils';\r\n\r\nexport const initState = {\r\n  items: pizzas,\r\n  addedItems: [],\r\n  total: 0,\r\n  totalQuantity: 0,\r\n  delivery: 5,\r\n};\r\n\r\nexport const rootReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n    case addToCartAction.toString():\r\n      let addedItem = state.items.find(item=> item.id === action.payload);\r\n      let repitedItem = state.addedItems.find(item=> action.payload === item.id);\r\n      if (repitedItem) {\r\n        addedItem.quantity +=1;\r\n\r\n        return {\r\n          ...state,\r\n          total: state.total + addedItem.price,\r\n          totalQuantity: state.totalQuantity +=1,\r\n        }\r\n      } else {\r\n        addedItem.quantity = 1;\r\n\r\n        let newTotal = state.total + addedItem.price;\r\n\r\n        return {\r\n          ...state,\r\n          addedItems: [ ...state.addedItems, addedItem],\r\n          total: newTotal,\r\n          totalQuantity: state.totalQuantity +=1,\r\n        }\r\n      };\r\n    case emptyCartAction.toString():\r\n      return {\r\n        ...state,\r\n        addedItems: [],\r\n        total: 0,\r\n        totalQuantity: 0,\r\n      };\r\n    case increaseCountAction.toString(): {\r\n      let addedItem = state.addedItems.find(item=> item.id === action.payload);\r\n      addedItem.quantity +=1;\r\n      return {\r\n        ...state,\r\n        total: state.total + addedItem.price,\r\n        totalQuantity: state.totalQuantity +=1,\r\n      }\r\n    };\r\n    case decreaseCountAction.toString(): {\r\n      let addedItem = state.addedItems.find(item=> item.id === action.payload);\r\n      addedItem.quantity -=1;\r\n      return {\r\n        ...state,\r\n        total: state.total - addedItem.price,\r\n        totalQuantity: state.totalQuantity -=1,\r\n      }\r\n    };\r\n    case deleteItemtAction.toString(): {\r\n      let addedItem = state.addedItems.find(item=> item.id === action.payload);\r\n      const index = state.addedItems.indexOf(addedItem);\r\n      const restItems = [ ...state.addedItems.slice(0, index), ...state.addedItems.slice(index +1) ];\r\n      return {\r\n        ...state,\r\n        addedItems: restItems,\r\n        total: state.total - addedItem.price,\r\n        totalQuantity: state.totalQuantity - addedItem.quantity,\r\n      }\r\n    };\r\n    default:\r\n      return state;\r\n    }\r\n};\r\n","export const pizzas = [\r\n  {\r\n    'id': '1',\r\n    'name': 'BUFALINA PIZZA1',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '2',\r\n    'name': 'BUFALINA BUFALINA PIZZA2',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '3',\r\n    'name': 'BUFALINA PIZZA3',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '4',\r\n    'name': 'BUFALINA PIZZA4',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '5',\r\n    'name': 'BUFALINA PIZZA5',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '6',\r\n    'name': 'BUFALINA PIZZA6',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '7',\r\n    'name': 'BUFALINA PIZZA7',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n  {\r\n    'id': '8',\r\n    'name': 'BUFALINA PIZZA8',\r\n    'description': 'Truffle olive oil sauce, Wisconsin mozzarella, Prosciutto di Parma, fresh arugula, and fresh mozzarella',\r\n    'price': 13,\r\n  },\r\n]\r\n","import { takeEvery, call, select } from 'redux-saga/effects';\r\nimport { submitOrderAction, emptyCartAction } from './actions';\r\n\r\nconst setLocalStorage = (getState) => {\r\n  localStorage.setItem('order', JSON.stringify(getState.addedItems));\r\n};\r\n\r\nexport function* handleOrder() {\r\n  yield takeEvery(submitOrderAction, function* (){\r\n    const getState = yield select();\r\n    yield call(setLocalStorage, getState);\r\n  });\r\n}\r\n\r\nconst clearLocalStorage = (getState) => {\r\n  localStorage.removeItem('order');\r\n};\r\n\r\nexport function* emptyCart() {\r\n  yield takeEvery(emptyCartAction, function* (){\r\n    const getState = yield select();\r\n    yield call(clearLocalStorage, getState);\r\n  });\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './modules/reducers';\r\nimport createSagaMiddleWare from 'redux-saga';\r\nimport { handleOrder, emptyCart } from './modules/sagas';\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\n\r\nconst createAppStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleWare),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (noop) => noop,\r\n    ),\r\n  );\r\n  sagaMiddleWare.run(handleOrder);\r\n  sagaMiddleWare.run(emptyCart);\r\n\r\n  return store;\r\n};\r\n\r\nexport default createAppStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport createStore from './store';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}